import pybamm
import numpy as np
import matplotlib.pyplot as plt

pybamm.set_logging_level("INFO")

# Define model with explicit phase variables
model = pybamm.lithium_ion.DFN({
    "particle phases": ("2", "1"),
    "open-circuit potential": (("single", "current sigmoid"), "single"),
    "particle mechanics": "swelling only",
    "operating mode": "current",

})

# Load and validate parameters
parameter_values = pybamm.ParameterValues("Chen2020_composite")
parameter_values.update({
# Primary: Graphite
    "Primary: Maximum concentration in negative electrode [mol.m-3]": 28700,
    "Primary: Initial concentration in negative electrode [mol.m-3]": 23000,
    "Primary: Negative particle diffusivity [m2.s-1]": 5.5e-14,
    "Primary: Negative electrode partial molar volume [m3.mol-1]": 3.1e-6,
    "Primary: Negative electrode Young's modulus [Pa]": 1e9,
    "Primary: Negative electrode Poisson's ratio": 0.3,
    "Primary: Negative electrode reference concentration for free of deformation [mol.m-3]": 23000,
    "Primary: Negative electrode volume change": 0.1,  # Nonzero for swelling model

    # Secondary: Silicon
    "Secondary: Maximum concentration in negative electrode [mol.m-3]": 260000,
    "Secondary: Initial concentration in negative electrode [mol.m-3]": 200000,
    "Secondary: Negative particle diffusivity [m2.s-1]": 1e-15,
    "Secondary: Negative electrode partial molar volume [m3.mol-1]": 9e-6,
    "Secondary: Negative electrode Young's modulus [Pa]": 5e9,
    "Secondary: Negative electrode Poisson's ratio": 0.28,
    "Secondary: Negative electrode reference concentration for free of deformation [mol.m-3]": 200000,
    "Secondary: Negative electrode volume change": 2.0,  # Large swelling

    # Positive electrode
    "Positive electrode partial molar volume [m3.mol-1]": 5e-6,
    "Positive electrode Young's modulus [Pa]": 2e10,
    "Positive electrode Poisson's ratio": 0.25,
    "Positive electrode reference concentration for free of deformation [mol.m-3]": 25777,
    "Positive electrode initial concentration [mol.m-3]": 25800,
    "Positive electrode volume change": 0.0,
}, check_already_exists=False)

# Experiment
C_rate = 0.1
experiment = pybamm.Experiment([
    f"Discharge at {C_rate}C until 3.0 V",
    f"Charge at {C_rate}C until 4.2 V",
])

# Mechanical parameter validation
if parameter_values["Secondary: Negative electrode Young's modulus [Pa]"] < 1e9:
    raise ValueError("Unrealistic Young's modulus for silicon")

# Enhanced solver configuration
solver = pybamm.CasadiSolver(
    mode="safe",
    atol=1e-8,
    rtol=1e-6,
    max_step_decrease_count=5,
    dt_max=30
)

var_pts = {
    "x_n": 20,
    "x_s": 20,
    "x_p": 20,
    "r_n_prim": 15,
    "r_n_sec": 15,
    "r_p": 15
}


# Run simulation
sim = pybamm.Simulation(
    model,
    parameter_values=parameter_values,
    experiment=experiment,
    solver=solver,
    var_pts=var_pts
)
solution = sim.solve()



# Extract time, particle radii, and voltage from the solution
time = solution["Time [s]"].entries
R_primary = solution["Negative primary particle radius [m]"].entries
R_secondary = solution["Negative secondary particle radius [m]"].entries
voltage = solution["Voltage [V]"].entries

# Plot particle radii (in micrometers) and voltage
plt.figure(figsize=(10, 6))
plt.plot(time, R_primary * 1e6, label="Graphite Particle Radius (μm)")
plt.plot(time, R_secondary * 1e6, label="Silicon Particle Radius (μm)")
plt.xlabel("Time (s)")
plt.ylabel("Particle Radius (μm)")
plt.title("Composite Electrode Swelling Dynamics")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

# Optionally, plot voltage separately
plt.figure(figsize=(10, 4))
plt.plot(time, voltage, label="Cell Voltage (V)", color="purple")
plt.xlabel("Time (s)")
plt.ylabel("Voltage (V)")
plt.title("Cell Voltage Profile")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
